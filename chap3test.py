# -*- coding: utf-8 -*-
"""chap3test.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RstykgF9gBWf5kjVPFRuNH5ypMAy51Z7

# **a는 수강 학점이고 수강학점의 출력하는 코드**
"""

a = 10
print(a)

3.141592

"Computer"

(7+ 15) * 2

2 ** 10 * 5

"computer" + "science"

apple = 2
banana = 3
cranberry = 1
detox = (banana ** 2 - 4 * apple * cranberry) //apple
print(detox)

"computer" * 2

print(2 * 7)

print("Hello World")
print("Python is Fun")

"""학점 계산"""

# 학점 계산
print((4.5 * 2 + 4.0 * 3) / 2)

#반지름 20, 높이 30
#부피 출력
print(1 / 3 * 3.14 * 20 ** 2 * 30)
#겉넓이 출력
print(3.14 * 20 ** 2 + 3.14 * 20 * 30)

#반지름, 높이 값 할당
red = 40
hei = 10

#부피 출력
print(1 / 3 * 3.14 * red ** 2 * hei)
#겉넓이 출력
print(3.14 * red ** 2 + 3.14 * red * hei)

5 /2

5 // 2

25 % 7

8.4 % 0.9

number = 9
number % 2

max(2, 3, 4)

min(2, 3, 4)

round(3.14)

#앱솔루트(절대값)
abs(-3)

#2의 3승(지수)
pow(2, 3)

print("   *")
print("  ***")
print(" *****")
print("*******")

input()

rad = input("반지름의 값을 입력하세요: ")

"""문자열-> 숫자로 변환"""

#반지름. 높이 값 할당
rad = int(input("반지름의 값을 입력하세요: "))
hei = int(input("높이 값을 입력하세요: "))
#부피& 겉넓이 계산
vol = 1/3 * 3.14 * rad ** 2 * hei
suf = 3.14 * rad ** 2 + 3.14 * rad * hei
print(vol)
print(suf)

"""동일값"""

#반지름. 높이 값 할당
rad = int(input("반지름의 값을 입력하세요: "))
hei = int(input("높이 값을 입력하세요: "))
#부피& 겉넓이 계산
print("부피의 값은 ",  1/3 * 3.14 * rad ** 2 * hei, "입니다.", sep="")
print("겉넓이의 값은 ", 3.14 * rad ** 2 + 3.14 * rad * hei, "입니다.", sep="")

"""선택구조"""

3 == 6

rad = 10

rad == 10

light_on = 3 > 6
print(light_on)

suf = 10
vol = 20
isStop = suf == vol
print(isStop)

"""if 조건했을때 값이 안맞으면 실행안"""

#반지름. 높이 값 할당
rad = int(input("반지름의 값을 입력하세요: "))
hei = int(input("높이 값을 입력하세요: "))

if rad > 0 :

    #부피& 겉넓이 계산
    vol = 1/3 * 3.14 * rad ** 2 * hei
    suf = 3.14 * rad ** 2 + 3.14 * rad * hei
    print("원뿔의 부피는 " , vol, "입니다.")
    print("겉넓이의 값은 ", suf, "입니다.")

temp = 20
fruit = "apple"

print(temp <= 27 or fruit == "pear")

temp = 20
fruit = "apple"

print(not temp <= 27 )

#반지름. 높이 값 할당
rad = int(input("반지름의 값을 입력하세요: "))
hei = int(input("높이 값을 입력하세요: "))

if rad > 0 and hei > 0:  ##조건식

    #부피& 겉넓이 계산
    vol = 1/3 * 3.14 * rad ** 2 * hei
    suf = 3.14 * rad ** 2 + 3.14 * rad * hei
    print("원뿔의 부피는 " , vol, "입니다.")
    print("겉넓이의 값은 ", suf, "입니다.")

#반지름. 높이 값 할당
rad = int(input("반지름의 값을 입력하세요: "))
hei = int(input("높이 값을 입력하세요: "))

if rad > 0 and hei > 0:  ##조건식

    #부피& 겉넓이 계산
    vol = 1/3 * 3.14 * rad ** 2 * hei
    suf = 3.14 * rad ** 2 + 3.14 * rad * hei
    print("원뿔의 부피는 " , vol, "입니다.")
    print("겉넓이의 값은 ", suf, "입니다.")
else :
    print(":반지름과 높이의 값을 모두 양수로 입력해주세요")

"""가장 큰 수 찾는 프로그램"""

#A, B, C 사용자 입력
A = int(input("A 입력: "))
B = int(input("B 입력: "))
C = int(input("C 입력: "))

#A, B, C 중 가장 큰 수 출력
# max(A, B, C)
if A > B :
  if A > C:
    print("A:", A)
  else :
    print("C:", C)
else :
    if B > C :
      print("B:", B)
    else :
      print("C:", C)

for i in range(1, 11) :
  print(i, end = " ")

"""count +1 이 되지않으면 무한반복/5까지만 출력하도록 설정하는과정임"""

msg = "저는 파이썬을 잘 다룰 수 있습니다."
count =1
while  count <= 5 :
  print(msg)
  count = count + 1

num = int(input("어디까지 더할까요?"))
sum = 0
i = 1
while i <= num:
  sum = sum + i
  i = i + 1
  print(sum)

"""구구단"""

base = int(input("출력할 단을 입력하세요: "))

i = 1
while i <= 9:
  print(base, "X" , i, "=", base * i)
  i = i + 1

"""리스트"""

hei_list = [1, 5, 14, 26,31]
for hei in hei_list :
  print(hei)

#반지름. 높이 값 할당
rad = 10
hei_list = [1, 5, 14, 26,31]

for hei in hei_list :
    #부피& 겉넓이 계산
    vol = 1/3 * 3.14 * rad ** 2 * hei
    suf = 3.14 * rad ** 2 + 3.14 * rad * hei
    print("반지름", rad, "높이", hei, "원뿔")
    print("원뿔의 부피는 " , vol, "입니다.")
    print("겉넓이의 값은 ", suf, "입니다.")

#반지름. 높이 값 할당
rad_list = range(10, 31, 10)
hei_list = [1, 5, 14, 26,31]

for rad, hei in zip(rad_list, hei_list) :
    #부피& 겉넓이 계산
    vol = 1/3 * 3.14 * rad ** 2 * hei
    suf = 3.14 * rad ** 2 + 3.14 * rad * hei
    print("반지름", rad, "높이", hei, "원뿔")
    print("원뿔의 부피는 " , vol, "입니다.")
    print("겉넓이의 값은 ", suf, "입니다.")

print(format("구구단표",">20s"))

#표 머리 출력
print("  |", end = "")
for j in range(1,10):
  print("  ", j, end = "")
#새로운 행 삽입
print()
print("----------------------------------------")

#구구단 표 출력

for i in range(1, 10, 1) :
  print(i, "|", end = "")
  for j in range(1, 10, ) :
    print(format(i * j,">4d"), end  = "")
  print()

def prt_cone_vol(r, h) :
  # r, h 모두 양수일 때
  if r > 0 and h > 0 :
    vol = 1/3 * 3.14 * r ** 2 * h
    print("원뿔의 부피: ", vol , "입니다")
  # r, h가 음수일 때
  else :
    print("반지름의 높이 값에 양수를 입력하세요")

"""원뿔 부피 계산 함수 호출"""

radius = 20
height = 30

prt_cone_vol(radius, height)

"""역순 정렬"""

num = 1234

def reverse_number(num) :
  while num != 0 :
    digit = num % 10
    num = num // 10
    print(digit, end="") #end=""를 했을때 다 붙여서 출력
reverse_number (num)

digits = 34567

def reverse_number(num) :
  while num != 0 :
    digit = num % 10
    num = num // 10
    print(digit, end="")
reverse_number (765)

def rtn_cone_vol(r, h) :
  # r, h 모두 양수일 때
  if r > 0 and h > 0 :
    vol = 1/3 * 3.14 * r ** 2 * h
    return vol

  # r, h가 음수일 때
  else :
    print("반지름의 높이 값에 양수를 입력하세요")

print(format(rtn_cone_vol(10, 20), ">20.3f"), "입니다. ")

def rtn_cone_vol_surf(r, h) :
  # r, h 모두 양수일 때
  if r > 0 and h > 0 :
    vol = 1/3 * 3.14 * r ** 2 * h
    surf = 3.14 * r ** 2 + 3.14 * r * h
    return vol , surf

  # r, h가 음수일 때
  else :
    print("반지름의 높이 값에 양수를 입력하세요")
vol1, surf1 =rtn_cone_vol_surf(50,100)
print(vol1, "입니다.")
print(surf1, "입니다.")
#print(rtn_cone_vol_surf(50, 100)) #, ">20.3f"), "입니다. ")

#A, B, C 사용자 입력
a = int(input("첫번째 숫자를 입력 하세요: "))
b = int(input("첫번째 숫자를 입력 하세요: "))
c = int(input("첫번째 숫자를 입력 하세요: "))

def sort3(a, b, c) :
  if a > b :
      a, b = b, a
  if a > c :
      a, c = c, a
  if b > c :
      b, c = c, b

  print(a, b, c)

sort3(a, b, c)
print("출력이후", a, b, c)

def rtn_cone_vol(r, h) :
  if r > 0 and h > 0 :
    vol = 1/3 * 3.14 * r ** 2 * h
    r, h = 0, 0
    return vol

  # r, h가 음수일 때
  else :
    print("반지름의 높이 값에 양수를 입력하세요")

r = 50
h = 100
print(format( rtn_cone_vol(r, h), ">10.3f"))
print("함수 사용 후", r, h)

"""변수의 스코프"""

x = 1
print("x의 값은", x)

def inc(x) :
  x = x + 1
  print("x의 값은", x)
inc(x)
print("3. x의 값은", x)

"""단위 원뿔(반지름20, 높이 30)의 부피와 겉넓이를 출력하는 문제"""

def rtn_cone_vol(r = 20, h = 30) :
  if r > 0 and h > 0 :
    # r, h 모두 양수일 때

    return 1/3 * 3.14 * r ** 2 * h, 3.14 * r ** 2 + 3.14 * r * h

  # r, h가 음수일 때
  else :
    print("반지름의 높이 값에 양수를 입력하세요")

print(rtn_cone_vol_surf(100, 200))

"""여러개의 수를 입력받고 합과 평균을 반환하는 var_sum_avg함수를 사용하여, (20, 25, 10, 85, 100, 150)에 대한 합과 평균을 출력하는 프로그램을 작성하시오"""

def var_sum_avg(*numbers) :
  sum = 0
  count = 0

  for i in numbers :
    sum = sum + i
    count = count + 1

  return sum, sum/count

print(var_sum_avg(20, 25, 10, 85, 100, 150))

"""객체지향"""

class Cone :
  def __init__ (self, radius= 20, height = 30) :
    self.r = radius
    self.h = height

  def get_vol(self) :
    return 1/3 * 3.14 * self.r ** 2 * self.h

  def get_surf(self):
      return 3.14 * self.r ** 2 + 3.14 * self.r * self.h
# def rtn_cone_vol_surf(r, h) :
#     if r > 0 and h > 0 :
#       vol = 1/3 * 3.14 * r ** 2 * h
#       r, h = 0, 0
#       return vol

  #   # r, h가 음수일 때
  #   else :
  #     print("반지름의 높이 값에 양수를 입력하세요")

  # r = 50
  # h = 100
  # print(format( rtn_cone_vol(r, h), ">10.3f"))
  # print("함수 사용 후", r, h)

"""BMI 계산 프로그램"""

class BMI :
  def __init__(self, name, age, weight, height) :
    self.name = name
    self.age = age
    self.weight = weight
    self.height = height

  def get_BMI(self) :
    return self.weight / (self.height/ 100) ** 2

  def get_status(self) :
    bmi = self.get_BMI()
    if bmi >= 25 :
      return "비만"
    elif bmi >= 23 and bmi < 25 :
      return "과체중"
    elif bmi >= 18.5 and bmi < 23 :
      return "정상"
    else :
      return "저체중"

"""단위 원뿔과 반지름, 높이가 50,100 인 원뿔의 부피와 겉넓이를 출력하는 프로그램을 작성하시오"""

unit_cone = Cone()
big_cone = Cone(50, 100)

print("단위 원뿔의 겉넓이와 부피는", unit_cone.get_surf() , unit_cone.get_vol(), "입니다.")
print( "큰 원뿔의 겉넓이와 부피는 ",big_cone.get_surf(),big_cone.get_vol(), "입니다.")
#

person1 = BMI("홍길동", 40, 78, 182)

print(person1.name + "님(" + str(person1.age) + "세)의 BMI는 (" + str(person1.get_BMI()) + ")," + "결과는", person1.get_status(), "입니다.")

sample_cone = Cone(100, 200)

sample_cone.get_vol()
sample_cone.get_surf()

sample_cone.r = -50

print(sample_cone.get_surf())

class pCone :
  def __init__ (self, radius= 20, height = 30) :
    if radius >= 0 and height > 0 :
      self.__r = radius
      self.__h = height

  def get_vol(self) :
    return 1/3 * 3.14 * self.__r ** 2 * self.__h

  def get_surf(self):
    return 3.14 * self.__r ** 2 + 3.14 * self.__r * self.__h

  def get_radius(self):
    return self.__r

  def set_radius(self, radius):
    if radius >=0 :
      self.__r = radius

perfect_cone = pCone(100, 200)

print(perfect_cone.get_vol())
print(perfect_cone.get_surf())

모듈

import math

help()

import math

print(math.pi)

class Cone :
  def __init__ (self, radius= 20, height = 30) :
    self.r = radius
    self.h = height

  def get_vol(self) :
    return 1/3 * math.pi * self.r ** 2 * self.h

  def get_surf(self):
      return math.pi * self.r ** 2 + math.pi * self.r * self.h

"""두 변의 길이가 a, b와 끼인각 a인 삼각형의 넓이를 구하는 프로그램을 작성하시오."""

import math
from math import sin #리엑트 같네용
a, b = 10, 20

area = 1 /2 * a * b * math.sin(math.radians(60))

print(area)

"""로또 프로그램"""

import random

guess_str = input("1~45 번호 6개를 쉼표로 분리하여 입력하세요: ").split(", ")
guess_list = list()

for i in guess_str:
  guess_list.append(int(i))
lotto_list = random.sample(range(1, 46, 1), 6 )
print("예상 번호는 ", guess_list, "입니다.")
print("추첨 번호는 ", lotto_list, "입니다.")
hit_count = 0;

for guess in guess_list:
  if guess in lotto_list:
    hit_count = hit_count + 1

print("축하합니다" + str(hit_count)+ "개 맞췄습니다.")

"""20번의 기회 안에 1 ~ 1000 사이의 숫자를 맞히는 스무고개 프로그램을 작성하시오"""

import random

hit_number = random.randint(1, 1001)

guess_count_list = range(1, 21, 1)

passfaill = False

for guess_count in guess_count_list:
# hit_count = 0

  guess = int(input("숫자를 맞춰보세요("+str(guess_count)+ "번째 시도): " ))

  if hit_number == guess:
    passfaill = True
    break;
  elif hit_number > guess:
    print(str("guess") + "보다 큽니다.",  end="")
  else:
    print(str("guess") + "보다 작습니다.",  end="")

if passfaill == True:
  print("맞췄습니다. 축하합니다")
else:
  print("모든기회를 다 사용하셨습니다. 다음 기회를 이용해주세요")

import time

start_time = time.time()

def is_prime(x):
  for i in range(2, x):
    if x % i == 0:
      return False

  return True
prime_count = 0

for i in range(2, 501):
  if is_prime(i):
    prime_count = prime_count + 1
    print(i, end = ", ")

end_time = time.time()

print("\n" ,end_time - start_time, "초 실행했습니다.")

